package com.android.multimedia;

import java.io.IOException;

import com.android.course.main.R;

import android.app.Activity;
import android.graphics.PixelFormat;
import android.hardware.Camera;
import android.hardware.Camera.PreviewCallback;
import android.hardware.Camera.ShutterCallback;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.View;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.view.WindowManager;
import android.widget.LinearLayout;

public class VideoRecorderActivity extends Activity {

	private Camera camera;
	private LinearLayout layout;

	private enum PreviewState {
		RUNNING, STOPPED
	};

	private PreviewState previewState = PreviewState.STOPPED;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// Setup application window
		getWindow().setFormat(PixelFormat.TRANSLUCENT);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.activity_video_recorder);

		// Get camera instance
		camera = getCamera();

		// Setup touch listener for taking pictures
		layout = (LinearLayout) findViewById(R.id.layout);
		layout.setEnabled(true);
		layout.setOnTouchListener(new OnTouchListener() {

			@Override
			public boolean onTouch(View arg0, MotionEvent event) {
				if (event.getActionMasked() == MotionEvent.ACTION_UP) {
					camera.takePicture(shutter, null, jpeg)
				}
				return true;
			}
		});
	}

	private Camera getCamera() {
		// Returns first back-facing camera
		// May take a long time to complete
		// Consider moving this to an AsyncTask
		camera = Camera.open();

		if (camera == null) {
			finish();
		}

		return camera;
	}

	SurfaceHolder.Callback shutter = new SurfaceHolder.Callback() {

		@Override
		public void surfaceCreated(SurfaceHolder arg0) {
			try {
				camera.setPreviewDisplay(arg0);
				camera.startPreview();
				previewState = PreviewState.RUNNING;
				Log.i("VideoRecorderActivity", "First method");
			} catch (IOException e) {
				Log.e("VideoRecorderActivity", e.getMessage());
			}

		}

		@Override
		public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2,
				int arg3) {

		}

		@Override
		public void surfaceDestroyed(SurfaceHolder arg0) {

		}
	};

}
