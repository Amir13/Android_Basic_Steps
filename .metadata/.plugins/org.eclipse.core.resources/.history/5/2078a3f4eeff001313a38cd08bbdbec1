package com.android.course.service;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;

import com.android.course.interfaces.aidl.service.KeyGeneratorAidl;

public class AidlService extends Service {

	// Set of already assigned IDs
	// Note: These keys are not guaranteed to be unique if the Service is killed
	// and restarted.

	private final static Set<UUID> ids = new HashSet<UUID>();

	// Implement the Stub for this Object
	private final KeyGeneratorAidl.Stub binder = new KeyGeneratorAidl.Stub() {

		// Implement the remote method
		@Override
		public String getKey(){
			UUID uniqueId;
			
			// Acquire lock to ensure exclusive access to mIDs 
			// Then examine and modify mIDs
			
			synchronized (ids) {
				do {
					uniqueId = UUID.randomUUID();
				} while (ids.contains(uniqueId));
				
				ids.add(uniqueId);
			}
			
			return uniqueId.toString();
		}
	};

	@Override
	public IBinder onBind(Intent intent) {
		return binder;
	}

}
