package com.android.course.contentProvider;

import java.util.ArrayList;

import com.android.course.main.R;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.app.Activity;
import android.content.ContentProviderOperation;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.StructuredName;
import android.provider.ContactsContract.Contacts;
import android.provider.ContactsContract.Data;
import android.provider.ContactsContract.RawContacts;

public class ContentInsertActivity extends Activity {

	public final static String[] names = new String[] { "Paly !!",
			"Android Painter", "Steve Ballmer", "Steve Jobs", "Larry Page" };

	private Account[] accountList;
	private String type;
	private String name;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// Get Account information
		// Must have a Google account set up on your device
		accountList = AccountManager.get(this).getAccountsByType("com.google");

		// Exit if there are no google accounts
		if (accountList.length == 0) {
			finish();
		}

		type = accountList[0].type;
		name = accountList[0].name;

		// Insert contacts
		insertContacts();
	}

	// Insert all new contacts into Contacts ContentProvider
	private void insertContacts() {
		// Set up a batch operation on Contacts ContentProvider
		ArrayList<ContentProviderOperation> batchOperation = new ArrayList<ContentProviderOperation>();

		for (String name : names) {
			addRecordToBatchOperation(name, batchOperation);
		}

	}

	private void addRecordToBatchOperation(String nameContact,
			ArrayList<ContentProviderOperation> batchOperation) {

		int position = batchOperation.size();

		// First part of operation
		batchOperation.add(ContentProviderOperation
				.newInsert(RawContacts.CONTENT_URI)
				.withValue(RawContacts.ACCOUNT_TYPE, type)
				.withValue(RawContacts.ACCOUNT_NAME, name)
				.withValue(Contacts.STARRED, 1).build());

		// Second part of operation
		batchOperation.add(ContentProviderOperation.newInsert(Data.CONTENT_URI)
				.withValueBackReference(Data.RAW_CONTACT_ID, position)
				.withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE)
				.withValue(StructuredName.DISPLAY_NAME, nameContact).build());

	}
}
